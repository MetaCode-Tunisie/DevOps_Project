pipeline {

    agent any
     

    stages {
    stage("Chekout Git"){
            steps {
                echo "Pulling"
            }
        }
    stage("Build") {
             steps {
                sh "mvn clean package -DskipTests"
            }
        }
        stage('Publish to Nexus') {
             steps {
                  echo "nexus"
        
                }
            }

          stage('MVN SONARQUBE') {
            steps {
                 echo "sonar"

            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    def customImageName = "khalilimage"
                    sh "docker build -t $customImageName ."
                }
            }
        }
       stage('Push Docker Image') {
    steps {
        script {
            def dockerUsername = 'charguikhalil'
            def dockerPassword = 'khalilchargui'
            sh "docker login -u $dockerUsername -p $dockerPassword"
            
                sh 'docker tag khalilimage charguikhalil/khalilimage'
                sh 'docker push charguikhalil/khalilimage'
            
        }
    }
}
       stage('Verify Docker Compose Installation') {
            steps {
                sh 'docker compose version'
                    }
}
stage('Docker Compose') {
            steps {
                 
               
                sh 'docker compose up -d'
                  sh 'docker compose down'
                  sh 'docker compose up -d'
                  
            }
        }


        stage('check Docker Compose') {
            steps {
                script {
                        sh 'docker compose ps'
                    }
                }
            }
        /*stage('Tests') {
                steps {
                    sh 'mvn test'
                	}
                }*/

        
}
post {
        success {
            emailext (
                subject: "Build Successful: ${currentBuild.fullDisplayName}",
                body: "The build ${currentBuild.fullDisplayName} has completed successfully.",
                to: 'nawress.rafrafi@esprit.tn' // Replace with the recipient's email address
            )
        }
        failure {
            emailext (
                subject: "Build Failed: ${currentBuild.fullDisplayName}",
                body: "The build ${currentBuild.fullDisplayName} has failed.",
                to: 'khalil.chargui@esprit.tn' // Replace with the recipient's email address
            )
        }
    }
}
